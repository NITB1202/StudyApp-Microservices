services:
  eureka-server:
    build:
      context: ./server-registry
    container_name: server-registry
    ports:
      - "8761:8761"
    networks:
      - backend

  user-db:
    image: postgres:15
    container_name: user-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    restart: always
    depends_on:
      - user-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      USER_SERVICE_DB_HOST: ${USER_SERVICE_DB_HOST}
      USER_SERVICE_DB_PORT: ${USER_SERVICE_DB_PORT}
      USER_SERVICE_DB_NAME: ${USER_SERVICE_DB_NAME}
      USER_SERVICE_DB_USERNAME: ${USER_SERVICE_DB_USERNAME}
      USER_SERVICE_DB_PASSWORD: ${USER_SERVICE_DB_PASSWORD}
    networks:
      - backend

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9090:9090"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9090,PLAINTEXT_HOST://localhost:9080
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9090,PLAINTEXT_HOST://0.0.0.0:9080
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - backend

volumes:
  user-db-data:

networks:
  backend:
