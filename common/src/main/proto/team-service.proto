syntax = "proto3";

package team;

import "common.proto";

option java_multiple_files = true;
option java_package = "com.study.teamservice.grpc";
option java_outer_classname = "TeamProto";

enum TeamRole {
  UNSPECIFIED = 0;
  CREATOR = 1;
  ADMIN = 2;
  MEMBER = 3;
}

//Team section
message CreateTeamRequest {
  string creatorId = 1;
  string name = 2;
  string description = 3;
}

message TeamResponse {
  string id = 1;
  string name = 2;
  string description = 7;
}

message GetTeamByIdRequest {
  string id = 1;
}

message TeamDetailResponse {
  string id = 1;
  string name = 2;
  string teamCode = 3;
  string createDate = 4;
  string creatorId = 5;
  int64 totalMembers = 6;
  string description = 7;
  string avatarUrl = 8;
}

message UpdateTeamRequest {
  string id = 1;
  string userId = 2;
  string name = 3;
  string description = 4;
}

message DeleteTeamRequest {
  string id = 1;
  string userId = 2;
}

//Team member section
message CreateInvitationRequest {
  string teamId = 1;
  string inviterId = 2;
  string inviteeId = 3;
}

message JoinTeamRequest {
  string userId = 1;
  string teamCode = 2;
}

message GetUserTeamsRequest {
  string userId = 1;
  string cursor = 2;
  int32 size =  3;
}

message TeamSummaryResponse {
  string id = 1;
  string name = 2;
  string avatarUrl = 3;
  bool managedByUser = 4;
}

message ListTeamResponse {
  repeated TeamSummaryResponse teams = 1;
  int64 total = 2;
  string nextCursor = 3;
}

message SearchUserTeamByNameRequest {
  string userId = 1;
  string keyword = 2;
  string cursor = 3;
  int32 size = 4;
}

message GetTeamMemberRequest {
  string userId = 1;
  string teamId = 2;
}

message TeamMemberResponse {
  string userId = 1;
  string joinDate = 2;
  TeamRole role = 3;
}

message GetTeamMembersRequest {
  string teamId = 1;
  string cursor = 2;
  int32 size = 3;
}

message TeamMemberSummaryResponse {
  string userId = 1;
  TeamRole role = 2;
}

message ListTeamMembersResponse {
  repeated TeamMemberSummaryResponse members = 1;
  int64 total = 2;
  string nextCursor = 3;
}

message GetAllTeamMembersRequest {
  string teamId = 1;
}

message AllTeamMembersResponse {
  repeated TeamMemberResponse members = 1;
}

message UpdateMemberRoleRequest {
  string teamId = 1;
  string userId = 2;
  string memberId = 3;
  TeamRole role = 4;
}

message RemoveTeamMemberRequest {
  string teamId = 1;
  string userId = 2;
  string memberId = 3;
}

message LeaveTeamRequest {
  string teamId = 1;
  string userId = 2;
}

message UploadTeamAvatarRequest {
  string userId = 1;
  string teamId = 2;
  string avatarUrl = 3;
}

service TeamService {
  //Team section
  rpc CreateTeam(CreateTeamRequest) returns (TeamResponse);
  rpc GetTeamById(GetTeamByIdRequest) returns (TeamDetailResponse);
  rpc UpdateTeam(UpdateTeamRequest) returns (TeamResponse); // -> notification
  rpc UploadTeamAvatar(UploadTeamAvatarRequest) returns (common.ActionResponse); // -> notification
  rpc DeleteTeam(DeleteTeamRequest) returns (common.ActionResponse); // -> notification

  //Team member section
  rpc CreateInvitation(CreateInvitationRequest) returns (common.ActionResponse); // -> notification
  rpc JoinTeam(JoinTeamRequest) returns (common.ActionResponse); // -> notification
  rpc GetUserTeams(GetUserTeamsRequest) returns (ListTeamResponse);
  rpc SearchUserTeamByName(SearchUserTeamByNameRequest) returns (ListTeamResponse);
  rpc GetTeamMember(GetTeamMemberRequest) returns (TeamMemberResponse);
  rpc GetTeamMembers(GetTeamMembersRequest) returns (ListTeamMembersResponse);
  rpc GetAllTeamMembers(GetAllTeamMembersRequest) returns (AllTeamMembersResponse);
  rpc UpdateTeamMemberRole(UpdateMemberRoleRequest) returns (common.ActionResponse);
  rpc RemoveTeamMember(RemoveTeamMemberRequest) returns (common.ActionResponse); // -> notification
  rpc LeaveTeam(LeaveTeamRequest) returns (common.ActionResponse); // -> notification
}